@using True_Dive_Deep.Models
@model List<True_Dive_Deep.Models.CartItem>

@{
    ViewData["Title"] = "Din Kurv";
   
}

<h2 class="mb-4">Din Kurv</h2>

<section class="h-100 gradient-custom">
    <div class="container py-5">
        <div class="row d-flex justify-content-center my-4">
            <div class="col-md-8">
                <div class="card mb-4">
                    <div class="card-header py-3">
                        <h5 class="mb-0">Cart - @Model.Count items</h5>
                    </div>
                    <div class="card-body">
                        @foreach (var item in Model)
                        {
                            <div class="row mb-4">
                                <div class="col-lg-3 col-md-12 mb-4 mb-lg-0">
                                    <div class="bg-image hover-overlay hover-zoom ripple rounded">
                                        <img src="~/lib/images/@item.ImageFileName" class="w-100" alt="@item.ProductName" />
                                    </div>
                                </div>

                                <div class="col-lg-5 col-md-6 mb-4 mb-lg-0">
                                    <p><strong>@item.ProductName</strong></p>

                                    <p>Brand: @item.Brand</p>
                                    <p>Size: @item.SelectedSize</p>
                                </div>

                                <div class="col-lg-4 col-md-6 mb-4 mb-lg-0">
                                    <div class="d-flex mb-2" style="max-width: 200px">
                                        <input type="number" value="@item.Quantity" class="form-control me-2" min="1" readonly />
                                    </div>
                                    <p class="text-start text-md-center">
                                        <strong>@item.PricePerDay DKK/pr.Dag</strong>
                                    </p>
                                </div>
                            </div>
                            <hr />

                            <form class="RemoveFromCart" action="/Cart/RemoveFromCart" method="post" style="display:inline;">
                                <input type="hidden" name="productId" value="@item.ProductId" />
                                <input type="hidden" name="productName" value="@item.ProductName" />
                                <input type="hidden" name="brand" value="@item.Brand" />
                                <input type="hidden" name="imageFileName" value="@item.ImageFileName" />
                                <input type="hidden" name="price" value="@item.PricePerDay" />
                                <input type="hidden" name="size" value="@(item.SelectedSize ?? "")" />
                                <input type="hidden" name="gender" value="@(item.SelectedGender ?? "")" />  
                                <button type="submit" class="btn btn-danger btn-sm">Fjern</button>
                            </form>
                        }
                    </div>
                </div>

                <div class="card mb-4">
                    <div class="card-body">
                        <p><strong>Total amount:</strong> <span id="totalPrice"> @Model.Sum(i => i.PricePerDay * i.Quantity)</span> DKK</p>
                    </div>
                </div>
                <form class="AddBooking" action="/Booking/AddBooking" method="post">
                    <div class="mb-3">
                        <label for="startDate" class="form-label">Startdato:</label>
                        <input type="date" id="startDate" name="startDate" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label for="endDate" class="form-label">Slutdato:</label>
                        <input type="date" id="endDate" name="endDate" class="form-control" required />
                    </div>

                    <button type="submit" class="btn btn-primary btn-lg btn-block">Book her!</button>
                </form>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        // Læs varerne fra Razor til JS som array af objekter
        const cartItems = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(
           Model.Select(i => new { i.PricePerDay, i.Quantity })
        ));

        // Brug de korrekte id'er fra input felterne
        const startInput = document.getElementById('startDate');
        const endInput = document.getElementById('endDate');
        const totalPriceElem = document.getElementById('totalPrice');

        function calculateDays(start, end) {
            const diffTime = end.getTime() - start.getTime();
            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1;
            return diffDays;
        }

        function updateTotalPrice() {
            const startDateValue = startInput.value;
            const endDateValue = endInput.value;

            if (!startDateValue || !endDateValue) {
                totalPriceElem.textContent = '0';
                return;
            }

            const startDate = new Date(startDateValue);
            const endDate = new Date(endDateValue);

            if (endDate < startDate) {
                totalPriceElem.textContent = '0';
                return;
            }

            const days = calculateDays(startDate, endDate);

            let total = 0;
            cartItems.forEach(item => {
                total += item.PricePerDay * item.Quantity * days;
            });

            totalPriceElem.textContent = total;
        }

        startInput.addEventListener('change', updateTotalPrice);
        endInput.addEventListener('change', updateTotalPrice);

        // Initial opdatering, hvis datoer allerede er udfyldt
        updateTotalPrice();
    </script>
   }

