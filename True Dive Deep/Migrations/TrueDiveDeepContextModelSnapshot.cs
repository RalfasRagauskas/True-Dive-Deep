// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using True_Dive_Deep.Data;

#nullable disable

namespace True_Dive_Deep.Migrations
{
    [DbContext(typeof(TrueDiveDeepContext))]
    partial class TrueDiveDeepContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("True_Dive_Deep.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PricePerDay")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("True_Dive_Deep.Models.BCD", b =>
                {
                    b.HasBaseType("True_Dive_Deep.Models.Product");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Sizes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("BCD", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = -1,
                            Brand = "Scubapro",
                            ImageFileName = "navigatorliteblue.jpg",
                            PricePerDay = 125,
                            Model = "Navigator Lite BCD",
                            Sizes = "[0,1,2]"
                        },
                        new
                        {
                            ProductId = -2,
                            Brand = "Scubapro",
                            ImageFileName = "bcd02.jpg",
                            PricePerDay = 140,
                            Model = "BCD Glide",
                            Sizes = "[0,1,2]"
                        },
                        new
                        {
                            ProductId = -3,
                            Brand = "Scubapro",
                            ImageFileName = "bcdhydrospro.png",
                            PricePerDay = 200,
                            Model = "BCD Hydros Pro",
                            Sizes = "[0,1,2]"
                        },
                        new
                        {
                            ProductId = -4,
                            Brand = "Seac",
                            ImageFileName = "bcdmodular.jpg",
                            PricePerDay = 145,
                            Model = "BCD Modular",
                            Sizes = "[0,1,2]"
                        });
                });

            modelBuilder.Entity("True_Dive_Deep.Models.DivingSuit", b =>
                {
                    b.HasBaseType("True_Dive_Deep.Models.Product");

                    b.PrimitiveCollection<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Sizes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Thickness")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("DivingSuit", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = -5,
                            Brand = "Scubapro",
                            ImageFileName = "Dykkerdragter.webp",
                            PricePerDay = 100,
                            Gender = "[0,1]",
                            Model = "Definition",
                            Sizes = "[0,1,2,3,4]",
                            Thickness = 3.0,
                            Type = "Våddragt"
                        },
                        new
                        {
                            ProductId = -6,
                            Brand = "Scubapro",
                            ImageFileName = "divingsuit5mm.webp",
                            PricePerDay = 100,
                            Gender = "[0,1]",
                            Model = "Definition",
                            Sizes = "[0,1,2,3,4]",
                            Thickness = 5.0,
                            Type = "Våddragt"
                        },
                        new
                        {
                            ProductId = -7,
                            Brand = "Scubapro",
                            ImageFileName = "divingsuit7mm.webp",
                            PricePerDay = 100,
                            Gender = "[0,1]",
                            Model = "Definition",
                            Sizes = "[0,1,2,3,4]",
                            Thickness = 7.0,
                            Type = "Våddragt"
                        },
                        new
                        {
                            ProductId = -8,
                            Brand = "Waterproof",
                            ImageFileName = "divingsuitW5.jpg",
                            PricePerDay = 100,
                            Gender = "[0,1]",
                            Model = "W5",
                            Sizes = "[0,1,2,3,4]",
                            Thickness = 3.5,
                            Type = "Våddragt"
                        },
                        new
                        {
                            ProductId = -9,
                            Brand = "Fourth Element",
                            ImageFileName = "divingsuitproteus.jpg",
                            PricePerDay = 120,
                            Gender = "[0,1]",
                            Model = "Proteus",
                            Sizes = "[0,1,2,3,4]",
                            Thickness = 5.0,
                            Type = "Våddragt"
                        },
                        new
                        {
                            ProductId = -10,
                            Brand = "Scubapro",
                            ImageFileName = "divingsuitexodry.webp",
                            PricePerDay = 300,
                            Gender = "[0,1]",
                            Model = "Exodry 4.0",
                            Sizes = "[0,1,2,3,4]",
                            Thickness = 0.0,
                            Type = "Tørdragt"
                        },
                        new
                        {
                            ProductId = -11,
                            Brand = "Waterproof",
                            ImageFileName = "divingsuitd7evo.jpg",
                            PricePerDay = 320,
                            Gender = "[0,1]",
                            Model = "D7 Evo",
                            Sizes = "[0,1,2,3,4]",
                            Thickness = 0.0,
                            Type = "Tørdragt"
                        },
                        new
                        {
                            ProductId = -12,
                            Brand = "Santi",
                            ImageFileName = "divingsuiteliteplus.jpg",
                            PricePerDay = 350,
                            Gender = "[0,1]",
                            Model = "E.Lite Plus",
                            Sizes = "[0,1,2,3,4]",
                            Thickness = 0.0,
                            Type = "Tørdragt"
                        });
                });

            modelBuilder.Entity("True_Dive_Deep.Models.Fin", b =>
                {
                    b.HasBaseType("True_Dive_Deep.Models.Product");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Sizes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Fin", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = -13,
                            Brand = "Scubapro",
                            ImageFileName = "finjetfn.jpg",
                            PricePerDay = 50,
                            Model = "Jet Fin",
                            Sizes = "[0,1,2,3,4]"
                        },
                        new
                        {
                            ProductId = -14,
                            Brand = "Scubapro",
                            ImageFileName = "fingofin.jpg",
                            PricePerDay = 50,
                            Model = "GO Travel",
                            Sizes = "[0,1,2,3,4]"
                        },
                        new
                        {
                            ProductId = -15,
                            Brand = "Scubapro",
                            ImageFileName = "finjetfn.jpg",
                            PricePerDay = 60,
                            Model = "Seawing Supernova",
                            Sizes = "[0,1,2,3,4]"
                        },
                        new
                        {
                            ProductId = -16,
                            Brand = "Seac",
                            ImageFileName = "fingofin.jpg",
                            PricePerDay = 50,
                            Model = "Propulsion",
                            Sizes = "[0,1,2,3,4]"
                        },
                        new
                        {
                            ProductId = -17,
                            Brand = "Seac",
                            ImageFileName = "fingofin.jpg",
                            PricePerDay = 50,
                            Model = "ALA",
                            Sizes = "[0,1,2,3,4]"
                        },
                        new
                        {
                            ProductId = -18,
                            Brand = "Fourth Element",
                            ImageFileName = "finjetfn.jpg",
                            PricePerDay = 75,
                            Model = "Tech",
                            Sizes = "[0,1,2,3,4]"
                        },
                        new
                        {
                            ProductId = -19,
                            Brand = "Fourth Element",
                            ImageFileName = "finjetfn.jpg",
                            PricePerDay = 80,
                            Model = "Rec Fin",
                            Sizes = "[0,1,2,3,4]"
                        });
                });

            modelBuilder.Entity("True_Dive_Deep.Models.Mask_Snorkel", b =>
                {
                    b.HasBaseType("True_Dive_Deep.Models.Product");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Mask_Snorkel", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = -20,
                            Brand = "Scubapro",
                            ImageFileName = "Maske&Snorkel.png",
                            PricePerDay = 50,
                            Model = "Ghost"
                        },
                        new
                        {
                            ProductId = -21,
                            Brand = "Scubapro",
                            ImageFileName = "Maske&Snorkel.png",
                            PricePerDay = 60,
                            Model = "D-Mask"
                        },
                        new
                        {
                            ProductId = -22,
                            Brand = "Scubapro",
                            ImageFileName = "Maske&Snorkel.png",
                            PricePerDay = 50,
                            Model = "Spectra Mini"
                        },
                        new
                        {
                            ProductId = -23,
                            Brand = "Scubapro",
                            ImageFileName = "Maske&Snorkel.png",
                            PricePerDay = 75,
                            Model = "Crystal VU"
                        },
                        new
                        {
                            ProductId = -24,
                            Brand = "Fourth Element",
                            ImageFileName = "Maske&Snorkel.png",
                            PricePerDay = 75,
                            Model = "Scout Kontrast"
                        },
                        new
                        {
                            ProductId = -25,
                            Brand = "Fourth Element",
                            ImageFileName = "Maske&Snorkel.png",
                            PricePerDay = 75,
                            Model = "Scout Enhance"
                        },
                        new
                        {
                            ProductId = -26,
                            Brand = "Tusa",
                            ImageFileName = "Maske&Snorkel.png",
                            PricePerDay = 75,
                            Model = "Element"
                        });
                });

            modelBuilder.Entity("True_Dive_Deep.Models.RegulatorSet", b =>
                {
                    b.HasBaseType("True_Dive_Deep.Models.Product");

                    b.Property<string>("Octopus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StepOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StepTwo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("RegulatorSet", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = -27,
                            Brand = "Scubapro",
                            ImageFileName = "Regulator-Set.png",
                            PricePerDay = 125,
                            Octopus = "R105",
                            StepOne = "MK25EVO",
                            StepTwo = "S600"
                        },
                        new
                        {
                            ProductId = -28,
                            Brand = "Scubapro",
                            ImageFileName = "Regulator-Set.png",
                            PricePerDay = 100,
                            Octopus = "R095",
                            StepOne = "MK17EVO",
                            StepTwo = "C370"
                        },
                        new
                        {
                            ProductId = -29,
                            Brand = "Scubapro",
                            ImageFileName = "Regulator-Set.png",
                            PricePerDay = 150,
                            Octopus = "S270",
                            StepOne = "MK25EVO BT",
                            StepTwo = "A700 Carbon BT"
                        });
                });

            modelBuilder.Entity("True_Dive_Deep.Models.Tank", b =>
                {
                    b.HasBaseType("True_Dive_Deep.Models.Product");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.ToTable("Tank", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = -30,
                            Brand = "Scubapro",
                            ImageFileName = "",
                            PricePerDay = 150,
                            Volume = 5
                        },
                        new
                        {
                            ProductId = -31,
                            Brand = "Scubapro",
                            ImageFileName = "",
                            PricePerDay = 160,
                            Volume = 10
                        },
                        new
                        {
                            ProductId = -32,
                            Brand = "Scubapro",
                            ImageFileName = "",
                            PricePerDay = 170,
                            Volume = 12
                        },
                        new
                        {
                            ProductId = -33,
                            Brand = "Scubapro",
                            ImageFileName = "",
                            PricePerDay = 180,
                            Volume = 15
                        });
                });

            modelBuilder.Entity("True_Dive_Deep.Models.BCD", b =>
                {
                    b.HasOne("True_Dive_Deep.Models.Product", null)
                        .WithOne()
                        .HasForeignKey("True_Dive_Deep.Models.BCD", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("True_Dive_Deep.Models.DivingSuit", b =>
                {
                    b.HasOne("True_Dive_Deep.Models.Product", null)
                        .WithOne()
                        .HasForeignKey("True_Dive_Deep.Models.DivingSuit", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("True_Dive_Deep.Models.Fin", b =>
                {
                    b.HasOne("True_Dive_Deep.Models.Product", null)
                        .WithOne()
                        .HasForeignKey("True_Dive_Deep.Models.Fin", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("True_Dive_Deep.Models.Mask_Snorkel", b =>
                {
                    b.HasOne("True_Dive_Deep.Models.Product", null)
                        .WithOne()
                        .HasForeignKey("True_Dive_Deep.Models.Mask_Snorkel", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("True_Dive_Deep.Models.RegulatorSet", b =>
                {
                    b.HasOne("True_Dive_Deep.Models.Product", null)
                        .WithOne()
                        .HasForeignKey("True_Dive_Deep.Models.RegulatorSet", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("True_Dive_Deep.Models.Tank", b =>
                {
                    b.HasOne("True_Dive_Deep.Models.Product", null)
                        .WithOne()
                        .HasForeignKey("True_Dive_Deep.Models.Tank", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
